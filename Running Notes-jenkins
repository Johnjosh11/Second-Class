https://github.com/PythonAwsBoto3/webapp


http://go.tetranoodle.com/jenkins-dsl
https://job-dsl.herokuapp.com/ - convert dsl to xml
https://jenkinsci.github.io/job-dsl-plugin/
https://github.com/quidryan/aws-sdk-test.git
https://github.com/tetradev01/jenkinsdsl/blob/master
https://github.com/ravikiran-srini/springExample.git

-------------------------------shell script--------------------

set -e

function publish {
    cd ../../software/$1/
    # build 
    docker build -t $1 .

    # login
    docker login -u $OS_USERNAME -p $OS_PASSWORD ahtaaja.saunalahti.fi

    # tag and publish
    docker tag $1 ahtaaja.saunalahti.fi/jpd/devel/public/$1/$BRANCH_NAME
    docker push ahtaaja.saunalahti.fi/jpd/devel/public/$1/$BRANCH_NAME

    cd -
}

IFS=', ' read -r -a APPLICATIONS <<< "$2"

./prepare_containers.sh $2

for application in ${APPLICATIONS[@]};
do
    publish $application
done

#publish wagner
#publish settings
#publish jpd-intra
#publish closecustomer
#publish choppo
#publish contractcloser
#publish seppo
#publish dbproxy
#publish gsm-billing-changes
#publish tickets
#publish lappo
#publish mappo

-------------------------------------Groovy code--------------------------
Examples:1 To create a job.

def jobName = 'john-job'

job(jobName) {
}

Examples:2 For condition

def giturl = 'https://github.com/quidryan/aws-sdk-test.git'
for (i in 1..2) {
job ("DSL-test-maven-${i}") {
 scm{
     git(giturl)
     }
     steps {
        maven("test -Dtest.suite-${i}")
}
}
}

Examples:3 functions
def branches = ['master', 'feature']

branches.each { branch ->
      job('jenkins-${branch}'){
         scm{
           github('jenkins/jends1', branch)
}
}
}

Examples:3 function multiple branches with maven
def createMavenJob(def jobFactory, def name){
    jobFactory.mavenJob(name){
        goals('clean')
        
    }
}

def jobA = createMavenJob(this, 'project-a')
def jobB = createMavenJob(this, 'project-b')

jobB.with {
    scm{
        github('exampile-jenkins/poject-a')
    }
}

Example:4 game of life project
mavenJob('john1') {
    logRotator(-1, 10)
    jdk('Java 7')
    scm {
        github('wakaleo/game-of-life', 'master')
    }
    triggers {
        scm("* * * * *")
    }
    goals('clean verify')
}

-------------------------------------------------Jenkins file--------------
Example:1 - simple jenkinsfile pipeline (inline script)
pipeline {
    agent any
    stages {
     stage('Stage 1') {
        steps {
           echo 'Hello world!'
         }
       }
     }
  }
   
Example:2 - scm script with gameof life project

pipeline {
    agent any
    stages { 
        stage ('Compile Stage') {
          
           steps { 
              withMaven(maven : 'maven_3_5_0') {
                 sh 'mvn clean compile'
            }
        }
      }
      stage ('Testing Stage') {
           steps { 
              withMaven(maven : 'maven_3_5_0') {
                 sh 'mvn test'
            }
        }
      }
            stage ('Deploy Stage') {
           steps { 
              withMaven(maven : 'maven_3_5_0') {
                 sh 'mvn deploy'
            }
        }
      }

   }
}

Example:3 calling available environment variables with pipeline script

pipeline {
    agent any
    stages { 
       stage('stage1') {
            steps { 
               echo "Build ID: ${env.BUILD_ID}, Jenkins URL: ${env.JENKINS_URL}"
            }
         }
      }
 }

Example:3 declarative environment variables with pipeline script

pipeline {
   agent any
   environment {
     mainenv = 'test'
     }
     stages {
        stages('stage1') {
          environment {
             subenv = 'test1'
         }
         steps {
              echo mainenv
              echo subenv
           }
         }
      }
 }

Example:4 declarative environment variables are defined to that pirticular stage 

pipeline {
   agent any
   environment {
     mainenv = 'test'
     }
     stages {
        stages('stage1') {
          environment {
             subenv = 'test1'
         }
         steps {
              echo mainenv
              echo subenv
           }
         }
                   stages('stage2') {
         steps {
              echo mainenv
              echo subenv
           }
         }
      }
 }
 
